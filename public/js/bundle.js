!function(e){var t={};function s(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,o){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(s.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(o,r,function(t){return e[t]}.bind(null,r));return o},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=1)}([function(e,t){e.exports=function(e,t,s,o){return{player:e,colour:t,type:s,currentPos:o,possibleMoves:[]}}},function(e,t,s){const o=s(2),r=s(5),c=s(4);s(0);document.addEventListener("DOMContentLoaded",()=>{let e;console.log(r),o.setupBoard(),c.renderCheckedBoard(),c.renderPieces(o.pieces),o.calcAllMoves(r.activePlayer,r.opponent),document.getElementById("piece-container").addEventListener("click",t=>{const s=t.target.id.split("-").map(e=>+e),n=s[0],i=s[1],p=o.pieces[n][i];console.log(p),console.log("active player: ",r.activePlayer),"blank"!==p.type&&p.player!==r.opponent?(e=p,c.renderPath(e,o.pieces)):(e&&function(e,t){let s=!1;return t.possibleMoves.forEach(t=>{t[0]===e[0]&&t[1]===e[1]&&(s=!0)}),s}(s,e)&&(o.movePiece(e,s),o.calcAllMoves(r.activePlayer,r.opponent),o.clearAllPossibleMoves(),c.renderPath(e,o.pieces),c.renderPieces(o.pieces),r.swapActiveAndOpponent(),o.calcAllMoves(r.activePlayer,r.opponent)),e="")})})},function(e,t,s){const o=s(3),r=s(0),c={pieces:[],boardTemplate:["rkbKqbkr","pppppppp","00000000","00000000","00000000","00000000","pppppppp","rkbqKbkr"],checkedPlayer:"",checkedPath:[],setupBoard(){for(let e=0;e<8;e++){this.pieces[e]=[];for(let t=0;t<8;t++)if("0"===this.boardTemplate[e][t]){const t={type:"blank"};this.pieces[e].push(t)}else{let s,o;const c=this.boardTemplate[e][t];0===e||1===e?(s="black",o=2):(s="white",o=1);const n=r(o,s,c,[e,t]);"K"===c&&(n.check=!1),this.pieces[e].push(n)}}},setupTestBoard(e){for(let t=0;t<8;t++){this.pieces[t]=[];for(let s=0;s<8;s++)if("0"===e[t][s]){const e={type:"blank"};this.pieces[t].push(e)}else{let o,c;const n=e[t][s];0===t||1===t?(o="black",c=2):(o="white",c=1);const i=r(c,o,n,[t,s]);this.pieces[t].push(i)}}},calcAllMoves(e,t){console.log("hello"),this.pieces.forEach(s=>{s.forEach(s=>{s.player===e&&this.calcPieceMoves(s,t)})})},calcPieceMoves(e,t){e.possibleMoves=[];const s=this.getMoves(e).paths,o=this.getMoves(e).capturePaths,r="p"===e.type;let c=[];s.forEach(s=>{let o=!1;s.forEach(n=>{if(!o){const i=[];for(let t=0;t<2;t++)i.push(e.currentPos[t]-n[t]);this.isInsideBoard(i)?this.isEmptyGridPos(i)?c.push(i):this.isCapturePiece(i,t)&&!r?(c.push(i),this.isKing(i)&&(this.setKingCheck(i),this.checkedPlayer=t,this.checkedPath=s.map(t=>{let s=[];for(let o=0;o<2;o++)s.push(e.currentPos[o]-t[o]);return s}).filter(e=>e.every(e=>e>=0)),console.log(this.checkedPath)),o=!0):o=!0:o=!0}})}),o&&o.forEach(s=>{s.forEach(s=>{const o=[];for(let t=0;t<2;t++)o.push(e.currentPos[t]-s[t]);this.isInsideBoard(o)&&this.isCapturePiece(o,t)&&(c.push(o),this.isKing(o)&&this.setKingCheck(o))})}),e.possibleMoves=c},isKing(e){const t=e[0],s=e[1];return"K"===this.pieces[t][s].type},setKingCheck(e){const t=e[0],s=e[1];return this.pieces[t][s].check=!0},movePiece(e,t){const s=t[0],o=t[1],r=e.currentPos;e.currentPos=[s,o],this.pieces[s][o]=e,this.pieces[r[0]][r[1]]={type:"blank"}},clearAllPossibleMoves(){for(let e=0;e<8;e++)for(let t=0;t<8;t++)this.pieces[e][t].possibleMoves=[]},isPawnStart:e=>6===e.currentPos[0]||1===e.currentPos[0],getMoves(e){return"p"===e.type?this.isPawnStart(e)?o[e.type][e.colour]:{paths:[o[e.type][e.colour].paths[0].slice(0,1)],capturePaths:o[e.type][e.colour].capturePaths}:o[e.type]},isInsideBoard:e=>e.every(e=>e>=0&&e<=7),isEmptyGridPos(e){const t=e[0],s=e[1];return"blank"===this.pieces[t][s].type},isCapturePiece(e,t){const s=e[0],o=e[1];return this.pieces[s][o].player===t}};e.exports=c},function(e,t){e.exports={p:{white:{paths:[[[1,0],[2,0]]],capturePaths:[[[1,1],[1,-1]]]},black:{paths:[[[-1,0],[-2,0]]],capturePaths:[[[-1,-1],[-1,1]]]}},b:{paths:[[[-1,-1],[-2,-2],[-3,-3],[-4,-4],[-5,-5],[-6,-6],[-7,-7]],[[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7]],[[-1,1],[-2,2],[-3,3],[-4,4],[-5,5],[-6,6],[-7,7]],[[1,-1],[2,-2],[3,-3],[4,-4],[5,-5],[6,-6],[7,-7]]]},k:{paths:[[[-2,-1]],[[-2,1]],[[2,-1]],[[2,1]],[[-1,-2]],[[-1,2]],[[1,-2]],[[1,2]]]},r:{paths:[[[-1,0],[-2,0],[-3,0],[-4,0],[-5,0],[-6,0],[-7,0]],[[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0]],[[0,-1],[0,-2],[0,-3],[0,-4],[0,-5],[0,-6],[0,-7]],[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]]]},q:{paths:[[[-1,-1],[-2,-2],[-3,-3],[-4,-4],[-5,-5],[-6,-6],[-7,-7]],[[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7]],[[-1,1],[-2,2],[-3,3],[-4,4],[-5,5],[-6,6],[-7,7]],[[1,-1],[2,-2],[3,-3],[4,-4],[5,-5],[6,-6],[7,-7]],[[-1,0],[-2,0],[-3,0],[-4,0],[-5,0],[-6,0],[-7,0]],[[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0]],[[0,-1],[0,-2],[0,-3],[0,-4],[0,-5],[0,-6],[0,-7]],[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]]]},K:{paths:[[[-1,0]],[[1,0]],[[0,-1]],[[0,1]],[[-1,-1]],[[-1,1]],[[1,-1]],[[1,1]]]}}},function(e,t){const s={boardTemplate:["01010101","10101010","01010101","10101010","01010101","10101010","01010101","10101010"],pieceSymbols:{white:{p:"&#9817",k:"&#9816",b:"&#9815",r:"&#9814",q:"&#9813",K:"&#9812"},black:{p:"&#9823",k:"&#9822",b:"&#9821",r:"&#9820",q:"&#9819",K:"&#9818"}},renderCheckedBoard(){const e=document.getElementById("board-container");console.log(e);for(let t=0;t<8;t++)for(let s=0;s<8;s++)if("0"===this.boardTemplate[t][s]){const t=document.createElement("div");t.className="grid-square",t.style.backgroundColor="#f0d9b5",e.appendChild(t)}else{const t=document.createElement("div");t.className="grid-square",t.style.backgroundColor="#B58863",e.appendChild(t)}},renderPieces(e){const t=document.getElementById("piece-container");t.innerHTML="";for(let s=0;s<8;s++)for(let o=0;o<8;o++){let r=e[s][o];const c=document.createElement("div");c.id=`${s}-${o}`,"blank"===r.type?c.className=`${r.type} grid-square`:(c.className=`piece ${r.type} ${r.colour}`,c.innerHTML=this.pieceSymbols[r.colour][r.type]),t.appendChild(c)}},renderPath(e,t){const s=document.getElementById("path-container");s.innerHTML="";const o=e.possibleMoves,r=e.currentPos;for(let e=0;e<8;e++)for(let i=0;i<8;i++){let p=t[e][i],a=document.createElement("div");n(p)&&a.classList.add("check"),c([e,i],o)?a.classList.add("circle"):c([e,i],[r])&&a.classList.add("highlighted"),s.appendChild(a)}function c(e,t){let s=!1;return t.forEach(t=>{t[0]===e[0]&&t[1]===e[1]&&(s=!0)}),s}function n(e){return!0===e.check}}};e.exports=s},function(e,t){const s={activePlayer:1,opponent:2,check:{player:null,paths:{attacking:[],escape:[]}},checkmate:!1,draw:!1,swapActiveAndOpponent(){2===this.opponent?(this.opponent=1,this.activePlayer=2):(this.opponent=2,this.activePlayer=1)}};e.exports=s}]);